version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: ml_interview_platform_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails API Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgres://postgres:password@db:5432/ml_interview_platform_development
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY_BASE: your_secret_key_base_here
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/tmp
    command: >
      sh -c "
        bundle install &&
        rails db:create db:migrate db:seed &&
        rails server -b 0.0.0.0 -p 3000
      "

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

  # ML Evaluation Service (Python)
  ml-evaluator:
    build:
      context: ./ml-evaluator
      dockerfile: Dockerfile
    environment:
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      - redis
    volumes:
      - ./ml-evaluator:/app
    command: python app.py

volumes:
  postgres_data:


